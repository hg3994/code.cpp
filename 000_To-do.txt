
Google
======
1. https://leetcode.com/discuss/interview-question/1111646/google-onsite-software-engineer


TO-DO-NEXT
==========
* https://www.geeksforgeeks.org/longest-palindrome-substring-set-1/
*	AVL TO LINKED LIST: https://www.youtube.com/watch?v=rbg7Qf8GkQ4  
*	https://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/
* https://www.geeksforgeeks.org/water-drop-problem/
* https://www.geeksforgeeks.org/counting-sort/
* https://www.geeksforgeeks.org/radix-sort/
* https://www.geeksforgeeks.org/bucket-sort-2/
* https://www.geeksforgeeks.org/inorder-tree-traversal-without-recursion/
* https://www.geeksforgeeks.org/iterative-postorder-traversal/
* Median of Two sorted arrays of different sizes.
* Convex Hull
* Distributed Merge and Distributed Quick Sort.


Theory
======
* inheritance vs object creation.
* Replication Factor, Read, Write in Cassandra.
* Full Text Search
* Static Function
* Singleton Class: When it is used? Does it mean only one instance at a time or all in all one instance? Logic of constructor ?
* What are cin and cout in C++. They are objects of which class. Namespaces in C++.
* What happens when we press www.google.com
* Explain all the Protocols starting from ARP, RARP, BOOTP, DHCP.
* Does c++ contains automatic garbage collection?what is the use of free and del function in c++.
* kafka, synchronous & asnchronous
* Why is redis so fast?
* redis vs memcache: Caching: Why is it used? (Read more and write less kind of scenario)
	- Limited amt. of data and should never be considered as the source of truth.
* CACHING: Every node has its own cache vs Distributed Caching
* Load balancer: Roundrobin, load average of individual hosts, L4, L7
* Denormalization.
* Distributed state management.
* Data Fragmentation
* Rate Limiting ALgorithm
* Login/Authentication in RoR?
* Why doesn't stack's pop() method return anything?: https://stackoverflow.com/questions/25035691/why-doesnt-stdqueuepop-return-value
* Peer-to-Peer file sharing
* How is indexing applied in DBs? How is it beneficial in query time reduction? Time Complexity is reduced from ON to OlogN
* Consistent Hashing
* Optimistic Locking vs Pessimistic Locking
* HTTP vs HTTP2 (multiple request over a single connection) vs Websockets
* TCP/IP vs UDP
* IPv4 vs IPv6
* HTTPs and Transport Layer Security
* Public Key Infrastructure and Cerificate Authority
* Factory and Singleton
* Publish-Subscribe
* Zookeeper
* Elastic Search
* Blobstore (s3)
* Map Reduce



DESIGN
======
* Facebook Messenger/ Whatsapp
* Uber/Lyft
* TinyURL
* Swiggy/Zomato


Puzzles
=======
* 29x + 30y + 31z = 366 Solve it. This is a really good puzzle. 366 is the no of days in a leap year so no of months with 29 days is 1 (February) and no of months with 30 days is 4 and no of months with 31 days is 7. x=1, y=4, z=7.
* How many people must be there in a room to make the probability 100% that at-least two people in the room have same birthday? https://www.geeksforgeeks.org/birthday-paradox/


TRACKING
========
* https://www.geeksforgeeks.org/dijkstras-algorithm-for-adjacency-list-representation-greedy-algo-8/
* https://www.geeksforgeeks.org/dijkstras-shortest-path-algorithm-greedy-algo-7/
* https://www.geeksforgeeks.org/print-nodes-distance-k-given-node-binary-tree/
* https://www.geeksforgeeks.org/find-maximum-path-sum-in-a-binary-tree/
* https://www.geeksforgeeks.org/travelling-salesman-problem-set-1/
* https://www.geeksforgeeks.org/tiling-problem/
* https://www.geeksforgeeks.org/lexicographic-rank-of-a-string/ https://www.geeksforgeeks.org/lexicographic-rank-string-duplicate-characters/ https://www.geeksforgeeks.org/lexicographic-rank-string-using-stl/
* https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/ https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-2/
* https://www.geeksforgeeks.org/painters-partition-problem/ https://www.geeksforgeeks.org/painters-partition-problem-set-2/
* https://www.geeksforgeeks.org/in-place-convert-a-given-binary-tree-to-doubly-linked-list/
* https://www.geeksforgeeks.org/timsort/


Things to do in the checklist
=============================
- Design Patterns


Behavioural
===========
- What are some positive things your teammates would say about you?
- What are some negative things your teammates would say about you?
- Why are you leaving this company?
- Why are you willing to join our company?


I can ask:
	- How is life at your company?
	- How is the work-life balance in your company?